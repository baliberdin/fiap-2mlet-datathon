services:
  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    hostname: mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "true"
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ./mysql/startup.sql:/docker-entrypoint-initdb.d/startup.sql

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    depends_on: 
      - prometheus
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

  similarity-api:
    image: similarity-api
    container_name: similarity-api
    hostname: similarity-api
    depends_on: 
      - mysql
      - mlflow-server
    volumes:
      - ./similarity_api/env.yaml:/opt/similarity-api/env.yaml
      - ./similarity_api/logging.conf:/opt/similarity-api/logging.conf
    restart: no
    ports:
      - 8000:80

  mlflow-server:
    image: ghcr.io/mlflow/mlflow:v2.20.1
    container_name: mlflow-server
    hostname: mlflow-server
    ports:
      - 5000:5000
    volumes:
      - ./mlflow-server/bin/startup.sh:/opt/mlflow-server/startup.sh
    entrypoint: ["/opt/mlflow-server/startup.sh"]

  decision-app:
    image: decision-app
    container_name: decision-app
    hostname: decision-app
    depends_on: 
      - mysql
    restart: always
    ports:
      - 3001:3001
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: decision
      DB_PASSWORD: 1234
      DB_NAME: decision
      SIMILARITY_API_PORT: 80
      SIMILARITY_API_HOST: similarity-api


  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    hostname: qdrant
    ports:
      - 6333:6333 

  jenkins:
    image: jenkins/jenkins
    container_name: jenkins
    hostname: jenkins
    ports:
      - 8080:8080
      - 50000:50000

  pypiserver:
    image: pypiserver/pypiserver:latest
    container_name: pypiserver
    hostname: pypiserver
    ports:
      - 8081:8080
    volumes:
      - ./pypiserver/packages:/data/packages
    command: -a . -P .

networks:
  development:
    driver: bridge